.. MLproject documentation master file, created by
   sphinx-quickstart on Fri Sep 25 23:11:00 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

数据处理部分
=====================================
词典部分
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 | 我们将构建一个独立于输入数据的word_dict。这方面目前考虑使用一些中文的权威词典。
   为了能够以较快的速度完成词语的匹配，我们考虑采用一些特殊的数据结构来存储这个词典。

::
   
   class Lexicon():
      def __init__(self):

      def build_lexicon(self,input_dictionary):

      def load_dictionary(self,saved_dictionary):

      def save_dictionary(self):

      def search(self,query):
         """
         query是当前的char，我们将返回所有以这个char开头的word,返回的形式是一个list。
         """

匹配函数
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

   def match(current_char,word_dict)
   """
   match函数将调用Lexicon.search(),保留所有在输入序列中确实存在的词语，并将这些词语用来构建Data.words
   """

数据部分
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
::

   class Data():

说明：   
 | 我们将数据视为一个自定义数据类型Data，包含以下数据成员：
 | 输入数据中包含的字符Data.chars，用于构建图中的节点
 | 输入数据中包含的词语Data.words，用于构建图中的边
 | 每个字符对应的标签Data.labels(采用BMES或BIO标记法)


 | 类Data包含以下成员函数：


::

   def __init__(self):


::

   def show_data_info(self):

说明
 | 输出数据的信息

::

   def build_chars_dict(self,input_file):

说明
 | 从输入的文件中构建字符。self.chars_dict是一个字典，其中key是字符，value是其对应的index。

::

   def build_words_dict(self,input_file,word_dict):

说明
 | 根据word_dict匹配输入的文件中所有可能的词语，self.words_dict是一个字典，其中key是词语，以pair[a,b]的形式表示。
   a,b分别代表该词语起始和终止的char的index。value是其对应的index。


::

   def build_labels_dict(self,input_file):

说明
 | 获取每个字符对应的标签。self.labels_dict是一个字典，其中key是label,value是其对应的index。

::

   def build_chars_list(self,input_file):

说明
 | 从输入的文件中构建字符。self.chars_list是一个列表，其中的每个元素是输入序列中顺序出现的char的index。

::

   def build_words_list(self,input_file,word_dict):

说明
 | 根据word_dict匹配输入的文件中所有可能的词语，self.words_list是一个列表，其中的每个元素是输入序列中顺序出现的word的index。


::

   def build_labels_list(self,input_file):

说明
 | 获取每个字符对应的标签。self.labels_list是一个列表，其中的每个元素是输入序列中顺序出现的label的index。

向量嵌入部分
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 | 如果采用预训练的词向量，我们将使用的是 Lattice 公布的char和word预训练词向量。
 | 预训练的向量可以从以下地址获得https://github.com/jiesutd/LatticeLSTM
 | 由于各种原因(主要是经济原因)，我们将不会训练自己的词向量。因此如果使用预训练的词向量，词向量的维数等超参数都是不可修改的。
 




.. toctree::
   :maxdepth: 2
   :caption: Contents:




==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

